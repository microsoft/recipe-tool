# This file was generated by Codebase-Generator, do not edit directly
"""
Models for the Recipe Executor System.

This module defines the core data structures used throughout the Recipe Executor,
including file specifications and recipe steps. All models extend Pydantic's BaseModel
for validation, serialization, and documentation.
"""

from typing import Any, Dict, List, Union

from pydantic import BaseModel, Field


class FileSpec(BaseModel):
    """Represents a single file to be generated.

    Attributes:
        path: Relative path where the file should be written.
        content: The content of the file, which can be a string,
            a mapping, or a list of mappings for structured outputs.
    """

    path: str
    content: Union[str, Dict[str, Any], List[Dict[str, Any]]]


class RecipeStep(BaseModel):
    """A single step in a recipe.

    Attributes:
        type: The type of the recipe step.
        config: Dictionary containing configuration for the step.
    """

    type: str
    config: Dict[str, Any] = Field(default_factory=dict)


class Recipe(BaseModel):
    """A complete recipe with multiple steps.

    Attributes:
        steps: A list containing the steps of the recipe.
    """

    steps: List[RecipeStep] = Field(default_factory=list)
